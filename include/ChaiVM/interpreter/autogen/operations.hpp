/* This file was automatically generated by the script /Users/c71n93/Programming/C/huawei-courses/ChaiVM/tools/opcode2operation-generator.py at 19.12.2023 11:13:05 */
#pragma once
#include <string_view>
namespace chai::interpreter {
enum OperationFormat {
    Unknown,
    N,
    R,
    RR,
    I,
    RI
};
enum Operation {
    Inv = 0,
    Nop = 1,
    Ret = 2,
    Mov = 3,
    Ldia = 4,
    Ldra = 5,
    Star = 6,
    Add = 7,
    Addi = 8,
    Sub = 9,
    Subi = 10,
    Mul = 11,
    Muli = 12,
    Div = 13,
    Divi = 14,
    Ldiaf = 15,
    Addf = 16,
    Addif = 17,
    Subf = 18,
    Subif = 19,
    Mulf = 20,
    Mulif = 21,
    Divf = 22,
    Divif = 23,
    IcPrint = 24,
    IcScani = 25,
    IcScanf = 26,
    IcSqrt = 27,
    IcSin = 28,
    IcCos = 29,
    If_icmpeq = 30,
    If_icmpne = 31,
    If_icmpgt = 32,
    If_icmpge = 33,
    If_icmplt = 34,
    If_icmple = 35,
    If_acmpeq = 36,
    If_acmpne = 37,
    Сmpgf = 38,
    Cmplf = 39,
    Goto = 40,
    Call = 41,
};
constexpr std::string_view OP_TO_STR[] = {
"Inv", "Nop", "Ret", "Mov", "Ldia", "Ldra", "Star", "Add", "Addi", "Sub", "Subi", "Mul", "Muli", "Div", "Divi", "Ldiaf", "Addf", "Addif", "Subf", "Subif", "Mulf", "Mulif", "Divf", "Divif", "IcPrint", "IcScani", "IcScanf", "IcSqrt", "IcSin", "IcCos", "If_icmpeq", "If_icmpne", "If_icmpgt", "If_icmpge", "If_icmplt", "If_icmple", "If_acmpeq", "If_acmpne", "Сmpgf", "Cmplf", "Goto", "Call", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", "Inv", };
constexpr OperationFormat OP_TO_FORMAT[] = {
Unknown, N, N, RR, I, R, R, R, I, R, I, R, I, R, I, R, R, I, R, I, R, I, R, I, N, N, N, N, N, N, N, RI, RI, RI, RI, RI, RI, RI, R, R, I, I, };
} // namespace chai::interpreter
